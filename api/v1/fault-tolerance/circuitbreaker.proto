syntax = "proto3";

package faulttolerance;

option go_package = "api/v1/faulttolerance";
option java_package = "cn.polarismesh.polaris.faulttolerance";

import "google/protobuf/wrappers.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/any.proto";

// MatchString
message MatchString {
  enum MatchStringType {

    // Equivalent match
    EXACT = 0;
    // Regular match
    REGEX = 1;
	// Not equals match
	NOT_EQUALS = 2;
	// Contains match
	CONTAINS = 3;
	// Not contains match
	NOT_CONTAINS = 4;
  }

  // Matching rule
  MatchStringType type = 1;

  // Routing rules
  string value = 2;
}

message RuleMatcher {

  map<string, string> sourceLabels = 1;
  
  string destinationService = 2;
  
  string destinationNamespace = 3;
}


// main rule for circuitbreaking
message CircuitBreakerRule {
  //rule name
  string name = 1;
  
  // match condition 
  RuleMatcher match = 2;
  
  // circuitbreak to level
  enum Level {
	// service level circuitbreaking
    SERVICE = 0;
    // method level circuitbreaking
    METHOD = 1;
	// group level circuitbreaking
    GROUP = 2;
    // instance level circuitbreaking
    INSTANCE = 3;
  }
  repeated Level levels = 3;
  
  // circuitbreak policy
  enum Policy {
    FAIL_FAST = 0;
	THROTTING = 1;
  }
  Policy policy = 4;
  
  // circuitbreak policy detail config
  google.protobuf.Any policyConfig = 5;
}

message FailFastConfig {

  uint32 protectThreshold = 1;
  
  uint32 errorRatioThreshold = 2;

  uint32 consecutiveErrorThreshold = 3;
  
  uint32 errorCountThreshold = 4;
  
  uint32 slowRatioThreshold = 5;
  
  uint32 maxDelay = 6;
  
  uint32 sleepWindow = 7;
  
  uint32 statInteval = 8;
  
  uint32 statBucket = 9;
  
  uint32 recoverRatio = 10;
}

message ThrottingConfig {
  
  uint32 protectThreshold = 1;  
  
  uint32 keyFactor = 2;

  uint32 statInteval = 3;
  
  uint32 statBucket = 4;  
}
